name: Validate Grammar

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install tree-sitter CLI
      run: npm install -g tree-sitter-cli@0.24.7
    
    - name: Generate parser
      run: tree-sitter generate
    
    - name: Install dependencies and build bindings
      run: npm ci
    
    - name: Run tests
      run: tree-sitter test
    
    - name: Test C compilation
      run: |
        gcc -c src/parser.c -I src/ -std=c99 -o parser.o
        echo "Parser compiled successfully"
  
  bindings:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            binding: node
          - os: ubuntu-latest
            binding: rust
          - os: macos-latest
            binding: node
          - os: macos-latest
            binding: rust
          - os: windows-latest
            binding: node
          - os: windows-latest
            binding: rust
    
    runs-on: ${{ matrix.os }}
    name: Test ${{ matrix.binding }} bindings on ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install tree-sitter CLI
      run: npm install -g tree-sitter-cli@0.24.7
    
    - name: Generate parser
      run: tree-sitter generate
    
    - name: Setup Rust
      if: matrix.binding == 'rust'
      uses: dtolnay/rust-toolchain@stable
    
    - name: Test Node.js bindings
      if: matrix.binding == 'node'
      run: |
        npm ci
        node -e "const Parser = require('tree-sitter'); const Solidity = require('./bindings/node'); const parser = new Parser(); parser.setLanguage(Solidity); console.log('Node.js bindings loaded successfully');"
        npm test
    
    - name: Test Rust bindings
      if: matrix.binding == 'rust'
      run: |
        cargo test
        cargo build --release